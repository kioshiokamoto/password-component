{"version":3,"file":"PasswordInput.stories-39a57325.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../src/components/PasswordInput/PasswordInput.helpers.ts","../../src/assets/valid.png","../../src/assets/invalid.png","../../src/assets/view.png","../../src/assets/hide.png","../../src/components/PasswordInput/PasswordInput.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { InputValidation, PasswordRulesEnum } from \"./PasswordInput.types\";\n\nexport const getTextFromType = (type: PasswordRulesEnum): string => {\n  switch (type) {\n    case \"hasNoConsecutiveLetter\":\n      return \"Has no consecutive letters\";\n    case \"hasNumber\":\n      return \"Has a number 0-9\";\n    case \"hasSpecialChar\":\n      return \"Has a special char !@#$%^&*()_+.\";\n    case \"hasUpperCase\":\n      return \"Has an uppercase letter\";\n    default:\n      return \"Rule\";\n  }\n};\n\nexport const validatePasswordFromType = (\n  password: string,\n  type: PasswordRulesEnum\n): boolean => {\n  switch (type) {\n    case \"hasNoConsecutiveLetter\":\n      return !/(.)\\1/.test(password) && password.length > 1;\n    case \"hasNumber\":\n      return /[0-9]/.test(password);\n    case \"hasSpecialChar\":\n      return /[^A-Za-z0-9]/g.test(password);\n    case \"hasUpperCase\":\n      return /[A-Z]/.test(password);\n    default:\n      return false;\n  }\n};\n\nexport const buildValidationObject = (): InputValidation => {\n  return {\n    hasNoConsecutiveLetter: false,\n    hasNumber: false,\n    hasSpecialChar: false,\n    hasUpperCase: false,\n    isValid: true,\n  };\n};\n\nexport const buildClassName = (\n  parentClassName: string | undefined,\n  element: string\n) => `${parentClassName ? `${parentClassName}__${element}` : \"\"}`;\n","export default \"__VITE_ASSET__ca0fdda9__\"","export default \"__VITE_ASSET__892373f2__\"","export default \"__VITE_ASSET__0b5adeb1__\"","export default \"__VITE_ASSET__3f98a2ba__\"","import { useMemo, useState } from \"react\";\n\nimport { PasswordInputProps as Props } from \"./PasswordInput.types\";\nimport { buildClassName, getTextFromType } from \"./PasswordInput.helpers\";\nimport { buildValidationObject } from \"./PasswordInput.helpers\";\nimport { validatePasswordFromType } from \"./PasswordInput.helpers\";\nimport \"./PasswordInput.styles.css\";\n\nimport validImage from \"@/assets/valid.png\";\nimport invalidImage from \"@/assets/invalid.png\";\nimport viewImage from \"@/assets/view.png\";\nimport hideImage from \"@/assets/hide.png\";\n\nconst PasswordInput: React.FC<Props> = (props) => {\n  const { toggleMask = true } = props ?? {};\n  const { options: optionsProp } = props;\n  const { parentClassName } = props;\n\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n  const options = useMemo(() => [...new Set(optionsProp)], [optionsProp]);\n\n  const validRules = useMemo(() => {\n    const validateObject = buildValidationObject();\n\n    options.forEach((option) => {\n      const validate = validatePasswordFromType(password, option);\n      validateObject[option] = validate;\n      validateObject.isValid = validate && validateObject.isValid;\n    });\n\n    return validateObject;\n  }, [options, password]);\n\n  const renderRules = () => {\n    return options.map((option) => {\n      const isValid = validRules[option];\n\n      return (\n        <div key={option} className=\"PasswordInput__rule\">\n          <img\n            className={`PasswordInput__status ${buildClassName(\n              parentClassName,\n              \"status\"\n            )}`}\n            src={isValid ? validImage : invalidImage}\n            alt={isValid ? \"valid\" : \"invalid\"}\n          />\n          <span>{getTextFromType(option)}</span>\n        </div>\n      );\n    });\n  };\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    const cleanedValue = value.replace(/\\s/g, \"\");\n    console.log({ cleanedValue, value });\n    setPassword(event.target.value);\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \" \") {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <div\n      className={`PasswordInput__container ${buildClassName(\n        parentClassName,\n        \"container\"\n      )}`}\n    >\n      <div\n        className={`PasswordInput__input-wrapper  ${buildClassName(\n          parentClassName,\n          \"input-wrapper\"\n        )} `}\n      >\n        <input\n          {...props}\n          type={showPassword ? \"text\" : \"password\"}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          className={`PasswordInput__input ${buildClassName(\n            parentClassName,\n            \"input\"\n          )}`}\n          placeholder=\"Password\"\n          aria-description=\"Password input\"\n        />\n        {toggleMask ? (\n          <div\n            onClick={handleTogglePassword}\n            className={`PasswordInput__visibility ${buildClassName(\n              parentClassName,\n              \"visibility\"\n            )}`}\n          >\n            {showPassword ? (\n              <img\n                className={`PasswordInput__toggle ${buildClassName(\n                  parentClassName,\n                  \"toggle\"\n                )}`}\n                src={hideImage}\n              />\n            ) : (\n              <img\n                className={`PasswordInput__toggle ${buildClassName(\n                  parentClassName,\n                  \"toggle\"\n                )}`}\n                src={viewImage}\n              />\n            )}\n          </div>\n        ) : null}\n      </div>\n      <div\n        className={`PasswordInput__rule-wrapper ${buildClassName(\n          parentClassName,\n          \"rule-wrapper\"\n        )}`}\n      >\n        {renderRules()}\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordInput;\n"],"names":["f","require$$0","k","l","m","n","p","q","c","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","getTextFromType","type","validatePasswordFromType","password","buildValidationObject","buildClassName","parentClassName","element","validImage","invalidImage","viewImage","hideImage","PasswordInput","props","toggleMask","optionsProp","setPassword","useState","showPassword","setShowPassword","options","useMemo","validRules","validateObject","option","validate","renderRules","isValid","jsxs","jsx","handleTogglePassword","onChange","event","value","cleanedValue","onKeyDown"],"mappings":";;;;;;;;GASa,IAAIA,EAAEC,EAAiBC,EAAE,OAAO,IAAI,eAAe,EAAEC,EAAE,OAAO,IAAI,gBAAgB,EAAEC,EAAE,OAAO,UAAU,eAAeC,EAAEL,EAAE,mDAAmD,kBAAkBM,EAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,EAAEC,EAAE,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAY,EAAE,MAAX,SAAiBG,EAAE,GAAG,EAAE,KAAc,EAAE,MAAX,SAAiBC,EAAE,EAAE,KAAK,IAAIH,KAAK,EAAEN,EAAE,KAAK,EAAEM,CAAC,GAAG,CAACJ,EAAE,eAAeI,CAAC,IAAIC,EAAED,CAAC,EAAE,EAAEA,CAAC,GAAG,GAAGF,GAAGA,EAAE,aAAa,IAAIE,KAAK,EAAEF,EAAE,aAAa,EAAWG,EAAED,CAAC,IAAZ,SAAgBC,EAAED,CAAC,EAAE,EAAEA,CAAC,GAAG,MAAM,CAAC,SAASR,EAAE,KAAKM,EAAE,IAAII,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAON,EAAE,OAAO,CAAC,YAAkBF,EAAaW,EAAA,IAACP,EAAEO,EAAA,KAAaP,ECPxWQ,EAAA,QAAiBd,kBCDN,MAAAe,EAAmBC,GAAoC,CAClE,OAAQA,EAAM,CACZ,IAAK,yBACI,MAAA,6BACT,IAAK,YACI,MAAA,mBACT,IAAK,iBACI,MAAA,mCACT,IAAK,eACI,MAAA,0BACT,QACS,MAAA,MACX,CACF,EAEaC,EAA2B,CACtCC,EACAF,IACY,CACZ,OAAQA,EAAM,CACZ,IAAK,yBACH,MAAO,CAAC,QAAQ,KAAKE,CAAQ,GAAKA,EAAS,OAAS,EACtD,IAAK,YACI,MAAA,QAAQ,KAAKA,CAAQ,EAC9B,IAAK,iBACI,MAAA,gBAAgB,KAAKA,CAAQ,EACtC,IAAK,eACI,MAAA,QAAQ,KAAKA,CAAQ,EAC9B,QACS,MAAA,EACX,CACF,EAEaC,EAAwB,KAC5B,CACL,uBAAwB,GACxB,UAAW,GACX,eAAgB,GAChB,aAAc,GACd,QAAS,EAAA,GAIAC,EAAiB,CAC5BC,EACAC,IACG,GAAGD,EAAkB,GAAGA,CAAe,KAAKC,CAAO,GAAK,EAAE,GChD/D,MAAeC,EAAA,GAAA,IAAA,IAAA,qBAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,uBAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,oBAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,oBAAA,YAAA,GAAA,EAAA,KCafC,EAAAC,GAAA,CACE,KAAA,CAAA,WAAAC,EAAA,IAAAD,GAAA,CAAA,EACA,CAAA,QAAAE,CAAA,EAAAF,EACA,CAAA,gBAAAP,CAAA,EAAAO,EAEA,CAAAV,EAAAa,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEAG,EAAAC,UAAA,IAAA,CAAA,GAAA,IAAA,IAAAN,CAAA,CAAA,EAAA,CAAAA,CAAA,CAAA,EAEAO,EAAAD,EAAAA,QAAA,IAAA,CACE,MAAAE,EAAAnB,IAEA,OAAAgB,EAAA,QAAAI,GAAA,CACE,MAAAC,EAAAvB,EAAAC,EAAAqB,CAAA,EACAD,EAAAC,CAAA,EAAAC,EACAF,EAAA,QAAAE,GAAAF,EAAA,OAAoD,CAAA,EAGtDA,CAAO,EAAA,CAAAH,EAAAjB,CAAA,CAAA,EAGTuB,EAAA,IACEN,EAAA,IAAAI,GAAA,CACE,MAAAG,EAAAL,EAAAE,CAAA,EAEA,OAAAI,EAAA,KAAA,MAAA,CAAA,UAAA,sBAAA,SAAA,CAEIC,EAAA,IAAA,MAAC,CAAA,UAAA,yBAAAxB,EACqCC,EAClC,QACA,CAAA,GACD,IAAAqB,EAAAnB,EAAAC,EAC2B,IAAAkB,EAAA,QAAA,SACH,CAAA,EAC3BE,EAAA,IAAA,OAAA,CAAA,SAAA7B,EAAAwB,CAAA,CAAA,CAAA,CAC+B,CAAA,EAAAA,CAAA,CACjC,CAAA,EAKNM,EAAA,IAAA,CACEX,EAAA,CAAAD,CAAA,CAA6B,EAG/Ba,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MACAE,EAAAD,EAAA,QAAA,MAAA,EAAA,EACA,QAAA,IAAA,CAAA,aAAAC,EAAA,MAAAD,CAAA,CAAA,EACAjB,EAAAgB,EAAA,OAAA,KAAA,CAA8B,EAGhCG,EAAAvC,GAAA,CACEA,EAAA,MAAA,KACEA,EAAA,eAAA,CACF,EAGF,OAAAgC,EAAA,KACE,MAAC,CAAA,UAAA,4BAAAvB,EACwCC,EACrC,WACA,CAAA,GACD,SAAA,CAEDsB,EAAA,KAAA,MAAC,CAAA,UAAA,iCAAAvB,EAC6CC,EAC1C,eACA,CAAA,IACD,SAAA,CAEDuB,EAAA,IAAA,QAAC,CAAA,GAAAhB,EACK,KAAAK,EAAA,OAAA,WAC0B,SAAAa,EAC9B,UAAAI,EACA,UAAA,wBAAA9B,EACmCC,EACjC,OACA,CAAA,GACD,YAAA,WACW,mBAAA,gBACK,CAAA,EACnBQ,EAAAe,EAAA,IAEE,MAAC,CAAA,QAAAC,EACU,UAAA,6BAAAzB,EAC+BC,EACtC,YACA,CAAA,GACD,SAAAY,EAAAW,EAAA,IAGC,MAAC,CAAA,UAAA,yBAAAxB,EACqCC,EAClC,QACA,CAAA,GACD,IAAAK,CACI,CAAA,EAAAkB,EAAA,IAGP,MAAC,CAAA,UAAA,yBAAAxB,EACqCC,EAClC,QACA,CAAA,GACD,IAAAI,CACI,CAAA,CACP,CAAA,EAAA,IAGF,CAAA,CAAA,EACNmB,EAAA,IACA,MAAC,CAAA,UAAA,+BAAAxB,EAC2CC,EACxC,cACA,CAAA,GACD,SAAAoB,EAAA,CAEY,CAAA,CACf,CAAA,CAAA,CAGN;;;;","x_google_ignoreList":[0,1]}